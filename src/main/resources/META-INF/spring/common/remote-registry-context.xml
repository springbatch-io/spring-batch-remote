<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<aop:config>
		<aop:advisor advice-ref="jobEntitySerializer" pointcut="execution(* io.springbatch.remote.domain.jpa.JpaJobEntityRepository.save(..))"/>
		<aop:advisor advice-ref="jobEntityDeserializer" pointcut="execution(* io.springbatch.remote.domain.jpa.JpaJobEntityRepository.find*(..))"/>
	</aop:config>

	<jpa:repositories base-package="io.springbatch.remote.domain"/>
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jtaDataSource" ref="dataSource"/>
		<property name="packagesToScan" value="io.springbatch.remote.domain"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${repository.generateDdl:false}"/>
			</bean>
		</property>
		<property name="jpaProperties" ref="jpa.properties"/>
	</bean>
	
	<tx:annotation-driven/>
	
	<bean id="jobEntitySerializer" class="io.springbatch.remote.domain.jpa.JobEntitySerializer"/>
	
	<bean id="jobEntityDeserializer" class="io.springbatch.remote.domain.jpa.JobEntityDeserializer"/>
	
	<bean id="jobRegistry" class="io.springbatch.remote.registry.RemoteJobRegistry">
		<constructor-arg>
			<bean class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>
		</constructor-arg>
	</bean>
	
	<beans profile="junit">
		<context:property-placeholder properties-ref="default.repository.properties"/>
		
		<util:properties id="default.repository.properties">
			<prop key="repository.generateDdl">true</prop>
		</util:properties>
		
		<util:properties id="jpa.properties">
			<prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.BitronixJtaPlatform</prop>
			<prop key="hibernate.current_session_context_class">jta</prop>
		</util:properties>
		
		<bean id="btmConfig" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices"/>
		 
		<bean id="BitronixTransactionManager" factory-method="getTransactionManager"
		    class="bitronix.tm.TransactionManagerServices" depends-on="btmConfig" destroy-method="toString" />
		    		
		<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		    <property name="transactionManager" ref="BitronixTransactionManager" />
		    <property name="userTransaction" ref="BitronixTransactionManager" />
		</bean>
		
		<bean id="dataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource" 
			init-method="init" destroy-method="close">
		    <property name="className" value="org.h2.jdbcx.JdbcDataSource" />
		    <property name="uniqueName" value="h2db" />
		    <property name="maxPoolSize" value="5" />
		    <property name="minPoolSize" value="1"/>
		    <property name="allowLocalTransactions" value="true"/>
		    <property name="driverProperties">
		        <props>
		            <prop key="user">sa</prop>
		            <prop key="URL">jdbc:h2:mem:a;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;</prop>
		        </props>
		    </property>
		</bean>		
	
	</beans>	
	
</beans>
